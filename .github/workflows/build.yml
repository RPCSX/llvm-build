name: Build LLVM

on:
  workflow_dispatch:
    inputs:
      checkoutversion:
        description: Git Checkout Version
        type: string

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}-${{ inputs.checkoutversion }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            arch: x64
            arch-tripple: x86_64
            runtime: MD
            runner: windows-2025
          - os: windows
            arch: x64
            arch-tripple: x86_64
            runtime: MT
            runner: windows-2025
          - os: linux
            arch: x64
            arch-tripple: x86_64
            runner: ubuntu-24.04
          - os: linux
            arch: aarch64
            arch-tripple: aarch64
            runner: ubuntu-24.04-arm
    name: ${{ matrix.os }} ${{ matrix.arch }} ${{ matrix.runtime }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Maximize build space
        if: matrix.os != 'windows'
        uses: easimon/maximize-build-space@master
        with:
            root-reserve-mb: 16384
            swap-size-mb: 16384
            remove-dotnet: 'true'
            remove-haskell: 'true'
            remove-codeql: 'true'
            remove-docker-images: 'true'

      - name: Clone LLVM
        run: git clone --depth 1 --branch llvmorg-${{ inputs.checkoutversion }} https://github.com/llvm/llvm-project.git

      - name: Configure LLVM (Windows)
        if: matrix.os == 'windows'
        env:
          PACKAGE_NAME: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.runtime }}
        run: |
          cmake -G "Visual Studio 17 2022" -B llvm_build -S llvm-project/llvm -DCPACK_GENERATOR=7Z -Thost=${{ matrix.arch }} -DLLVM_TARGETS_TO_BUILD="X86;AArch64" -DLLVM_DEFAULT_TARGET_TRIPLE:STRING=${{ matrix.arch-tripple }}-pc-windows-msvc -DLLVM_HOST_TRIPLE:STRING=${{ matrix.arch-tripple }}-pc-${{ matrix.os }}-msvc -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_RUNTIME=OFF -DLLVM_BUILD_TOOLS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_UTILS=OFF -DLLVM_USE_INTEL_JITEVENTS=ON -DLLVM_ENABLE_Z3_SOLVER=OFF -DCMAKE_SYSTEM_VERSION=10.0.26100 -DCMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION=10.0.26100 -DLLVM_USE_CRT_DEBUG=${{ matrix.runtime }}d -DLLVM_USE_CRT_RELEASE=${{ matrix.runtime }}

      - name: Configure LLVM (Other)
        if: matrix.os != 'windows'
        env:
          PACKAGE_NAME: ${{ matrix.os }}-${{ matrix.arch }}
        run: |
          cmake -B llvm_build -S llvm-project/llvm -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=7Z -DLLVM_TARGETS_TO_BUILD="X86;AArch64" -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_RUNTIME=OFF -DLLVM_BUILD_TOOLS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_UTILS=OFF -DLLVM_USE_INTEL_JITEVENTS=ON -DLLVM_ENABLE_Z3_SOLVER=OFF

      - name: Build LLVM (Windows)
        if: matrix.os == 'windows'
        run: cmake --build llvm_build --config Release --target=package -- /maxcpucount

      - name: Build LLVM (Other)
        if: matrix.os != 'windows'
        run: cmake --build llvm_build --target=package

      - name: Move Package
        run: mv llvm_build/*.7z ${{ env.PACKAGE_NAME }}

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.checkoutversion }}
          prerelease: false
          make_latest: true
          files: ${{ env.PACKAGE_NAME }}
